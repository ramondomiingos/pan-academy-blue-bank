name: Java CI with maven

on:
  push:
    branches: [ develop ]

jobs:
  #Test's job
  tests:
    name: Unit tests
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY}}
      AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY}}
      AWS_TOPIC_ARN: ${{secrets.AWS_TOPIC_ARN}}
    #Job's steps
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      #Set up JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
         #Verificação de cobertura de codigo, para o badage
      - name: Upload XML report to Codecov
        uses: codecov/codecov-action@v2
        with:
          name: PlayMode
          flags: automated
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage-results/**/*.xml
      #Run Tests
      - name: Run Tests
        run: mvn -B test
 
  #Build's job
  build:
    #Depends on sonar's job
    needs: tests
    name: Build
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY}}
      AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY}}
      AWS_TOPIC_ARN: ${{secrets.AWS_TOPIC_ARN}}
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      #Set up JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Build the application using Maven
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      #Build the application using Maven
      - name: Upload JAR
        #This uploads artifacts from your workflow allowing you to share data between jobs and store data once a workflow is complete.
        uses: actions/upload-artifact@v2
        with:
          #Set artifact name
          name: artifact
          #From this path
          path: target/blue-bank-0.1.0-SNAPSHOT.jar
